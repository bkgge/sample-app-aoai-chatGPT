trigger:
  branches:
    include:
      - main        # or your release branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  ACR_NAME: acrskfwwdev-duhyh2fverf0gcex         # <— your ACR login name, without .azurecr.io
  IMAGE_NAME: webapp-azoa  # or whatever you prefer
  WEBAPP_NAME: webapp-skfauto-ww-dev   # your Web App name
  RESOURCE_GROUP: rg-ai-skf-ww-dev     # your resource-group
  ACR_SERVICE_CONN: 'ACR-Service-Connection'  # DevOps service connection to your subscription
  ARM_SERVICE_CONN: 'ARM-Service-Connection'
stages:
- stage: BuildAndPush
  displayName: Build & Push Docker image
  jobs:
  - job: Docker
    steps:
    - checkout: self

    # Build & push to ACR
    - task: Docker@2
      displayName: Build & Push to ACR
      inputs:
        command: buildAndPush
        repository: $(IMAGE_NAME)
        dockerfile: WebApp.Dockerfile
        containerRegistry: $(ACR_SERVICE_CONN)   # set this up under Project Settings → Service connections
        tags: |
          latest
          $(Build.BuildId)
- stage: Deploy
  displayName: Deploy to Web App
  dependsOn: BuildAndPush
  jobs:
  - job: DeployWebApp
    displayName: Deploy container to Web App
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription:  $(ARM_SERVICE_CONN) 
        appName: $(WEBAPP_NAME)
        resourceGroupName: $(RESOURCE_GROUP)
        imageName: '$(ACR_NAME).azurecr.io/$(IMAGE_NAME):latest'
